
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Document;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Messie
 */
public class GererEtudiant extends javax.swing.JFrame {

    /**
     * Creates new form GererEtudiant
     */
    
    //formulaire form = new formulaire();
    ConnectDB connect = new ConnectDB();

    /**
     *
     */
    Statement st;
    ResultSet rs;

    /**
     * la table où nous récupérons les données de notre bd
     */
    DefaultTableModel model = new DefaultTableModel();

    /**
     * consctructeur, 
     * dans cette partie nous récupérons les données 
     * de notre bd dans la table.
     */
    public GererEtudiant() {
        initComponents();
     /*
        dans cette partie nous récupérons les donnés
        de notre bd dans la table sur l'interface graphique
        */   
        model.addColumn("id");
        model.addColumn("nom");
        model.addColumn("prenom");
        model.addColumn("filiere");
        model.addColumn("niveau");
        try {
        st=connect.resultatConnexion().createStatement();
        ResultSet rs=st.executeQuery("Select * from etudiant order by id asc");
        while(rs.next()){
        model.addRow(new Object[]{rs.getString("id"),rs.getString("nom"),rs.getString("prenom"),
            rs.getString("filiere"),rs.getString("niveau")});
        }
        }catch(SQLException e){System.err.println(e);}

        tb.setModel(model);

    }
    
    
       /**
     * fonction permettant 
     * de lancer le formulaire d'insertion ou de modification de données 
     * dans la base de données.
     */
    public void AfficherFormulaire(){
        
     java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formulaire().setVisible(true);
            }
        });
    
    }
    /**
     * fonction actualisation
     * permettant d'actualiser la table après chaque 
     * opération: insert, delete, select ou update.
     */
    
    public void Actualisation(){
     try { 
            
            model.setRowCount(0);
            st=connect.resultatConnexion().createStatement();
            ResultSet rs=st.executeQuery("Select * from etudiant order by id asc");
            while(rs.next()){
            model.addRow(new Object[]{rs.getString("id"),rs.getString("nom"),rs.getString("prenom"),
            rs.getString("filiere"),rs.getString("niveau")});
            
            
        
        }
            txtid.setText("");
            txtnom.setText("");
            txtpr.setText("");
            jCombniv.setSelectedItem("choisir");
            jCombfil.setSelectedItem("choisir");
        }catch(SQLException e){System.err.println(e);
    
    }
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    /**
     *  methode permettant de récupérer
     * les données de la table(une ligne) sur 
     * le formulaire et pouvoir le modifier.
     */
    
    private void deplacer(int i){
       try{
        txtid.setText(model.getValueAt(i, 0).toString());
        txtnom.setText(model.getValueAt(i,1).toString());
        txtpr.setText(model.getValueAt(i, 2).toString());
        jCombfil.setSelectedItem(model.getValueAt(i,3).toString());
        jCombniv.setSelectedItem(model.getValueAt(i, 4).toString());
    }catch(Exception e)
        { JOptionPane.showMessageDialog(null,"erreur de deplacement de message !!!!! "+e.getMessage());}
    }
    
     
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        labniv = new javax.swing.JLabel();
        jCombniv = new javax.swing.JComboBox<>();
        jCombfil = new javax.swing.JComboBox<>();
        labfil = new javax.swing.JLabel();
        labpr = new javax.swing.JLabel();
        labnom = new javax.swing.JLabel();
        labid = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtnom = new javax.swing.JTextField();
        txtpr = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        txtre = new javax.swing.JTextField();
        btnactu = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        jMenuItem3.setText("jMenuItem3");

        jMenuItem5.setText("jMenuItem5");

        jMenuItem6.setText("jMenuItem6");

        jMenuItem10.setText("jMenuItem10");

        jMenuItem11.setText("jMenuItem11");

        jMenuItem12.setText("jMenuItem12");

        jMenuItem14.setText("jMenuItem14");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(930, 700));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));
        jPanel1.setLayout(null);

        labniv.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labniv.setText("niveau:");
        jPanel1.add(labniv);
        labniv.setBounds(20, 210, 46, 17);

        jCombniv.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jCombniv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "choisir", "Licence 1", "Licence 2", "Licence 3", "Master 1", "Master 2" }));
        jCombniv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCombnivActionPerformed(evt);
            }
        });
        jPanel1.add(jCombniv);
        jCombniv.setBounds(100, 200, 160, 30);

        jCombfil.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jCombfil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "choisir", "Electronique", "Génie Informatique", "Telecommunication", "Génie Industriel" }));
        jCombfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCombfilActionPerformed(evt);
            }
        });
        jPanel1.add(jCombfil);
        jCombfil.setBounds(100, 160, 160, 30);

        labfil.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labfil.setText("filiere:");
        jPanel1.add(labfil);
        labfil.setBounds(20, 170, 42, 20);

        labpr.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labpr.setText("prenom:");
        jPanel1.add(labpr);
        labpr.setBounds(20, 120, 52, 17);

        labnom.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labnom.setText("nom:");
        jPanel1.add(labnom);
        labnom.setBounds(20, 70, 32, 17);

        labid.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labid.setText("id:");
        jPanel1.add(labid);
        labid.setBounds(20, 20, 16, 17);

        txtid.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jPanel1.add(txtid);
        txtid.setBounds(100, 20, 160, 30);

        txtnom.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtnom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnomActionPerformed(evt);
            }
        });
        jPanel1.add(txtnom);
        txtnom.setBounds(100, 60, 160, 30);

        txtpr.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtpr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtprActionPerformed(evt);
            }
        });
        jPanel1.add(txtpr);
        txtpr.setBounds(100, 110, 160, 30);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(40, 160, 300, 270);

        jPanel2.setBackground(new java.awt.Color(51, 153, 255));
        jPanel2.setLayout(null);

        tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        tb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 10, 510, 190);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(350, 180, 530, 210);

        jPanel3.setBackground(new java.awt.Color(51, 153, 255));
        jPanel3.setLayout(null);

        jButton1.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone/ajouter.png"))); // NOI18N
        jButton1.setText("Ajouter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);
        jButton1.setBounds(40, 30, 123, 41);

        jButton2.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone/supprimer.png"))); // NOI18N
        jButton2.setText("Supprimer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);
        jButton2.setBounds(260, 30, 150, 41);

        jButton3.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone/modifier.png"))); // NOI18N
        jButton3.setText("Modifier");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);
        jButton3.setBounds(490, 30, 140, 41);

        jButton5.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone/rechercher.png"))); // NOI18N
        jButton5.setText("Rechercher");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5);
        jButton5.setBounds(40, 90, 150, 41);

        txtre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtreActionPerformed(evt);
            }
        });
        txtre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtreKeyPressed(evt);
            }
        });
        jPanel3.add(txtre);
        txtre.setBounds(190, 90, 208, 40);

        btnactu.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnactu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone/actualiser.png"))); // NOI18N
        btnactu.setText("Actualiser");
        btnactu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactuActionPerformed(evt);
            }
        });
        jPanel3.add(btnactu);
        btnactu.setBounds(490, 90, 140, 40);

        getContentPane().add(jPanel3);
        jPanel3.setBounds(160, 450, 680, 150);
        getContentPane().add(jPanel4);
        jPanel4.setBounds(290, 50, 10, 10);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 36)); // NOI18N
        jLabel1.setText("Gestion des étudiants");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(420, 70, 330, 42);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setPreferredSize(new java.awt.Dimension(950, 750));
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 990, 620);

        jMenu1.setText("Menu");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem1.setText("Ajouter");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        jMenuItem4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem4.setText("Supprimer");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem7.setText("Modifier");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItem8.setText("Rechercher");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Aide");

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jMenuItem13.setText("documentation");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem13);

        jMenuItem15.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem15.setText("exporter en pdf");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem15);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtnomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnomActionPerformed

    private void jCombfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCombfilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCombfilActionPerformed

    private void jCombnivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCombnivActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCombnivActionPerformed

    /**
     * 
     * @param evt 
     * ici, nous appelons le formulaire 
     * permettant d'inserrer les données dans la base de données
     * appel du jFrame formulaire.
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:  
      AfficherFormulaire();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * 
     * @param evt pour la suppression d'un étudiant
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       
        try {
             /*if(JOptionPane.showConfirmDialog(null,"supprimer l'etudiant?"
                     ,"attention vous allez supprimer un etudiant",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION);*/
             
            if((txtid.getText().length() != 0)  && (JOptionPane.showConfirmDialog(null,"supprimer l'etudiant?"
                     ,"attention vous allez supprimer un etudiant",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION))
            {
        st.executeUpdate("Delete From etudiant where id = "+txtid.getText());
             }
            else { JOptionPane.showMessageDialog(null,"aucune suppression faite !");}
            //actualisation
            Actualisation();
        
        }catch (Exception e){JOptionPane.showMessageDialog(null,"erreur de suppression \n"+e.getMessage());} 
       
        
    }//GEN-LAST:event_jButton2ActionPerformed
/**
 * 
 * @param evt 
 * nous allons modifier les informations de chaque étudiant
 */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
       
         try { 
            if (JOptionPane.showConfirmDialog (null,"confirmer la modification","modification",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {

                st.executeUpdate("UPDATE etudiant SET nom='"+txtnom.getText()+"',prenom='"+txtpr.getText()+
                        "',filiere='"+jCombfil.getSelectedItem().toString()+"',niveau='"+jCombniv.getSelectedItem().toString()+
                        "' WHERE id= "+txtid.getText());
                //afficher ();
                //actualisation 
                Actualisation();
            } 
        } catch (Exception e){JOptionPane.showMessageDialog(null,"erreur de modifier !!!!!!!");
        System.err.println(e);}
        
    }//GEN-LAST:event_jButton3ActionPerformed
/**
 * 
 * @param evt 
 * recherche d'un étudiant
 */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //recherche d'un etudiant
        try {
           model.setRowCount(0);// pour vider la list des étudiants
      {
       rs = st.executeQuery("Select * From etudiant WHERE nom like '%"+txtre.getText()+"%' or prenom like '%"+txtre.getText()+"%' or filiere like '%"+txtre.getText()+"%'"
               + "or niveau like '%"+txtre.getText()+"%' order by id asc");
       }while (rs.next()){
       
       Object [] student ={rs.getInt(1),rs.getString(2),rs.getString(3),rs.getString(5),rs.getString(4)};
     model.addRow(student);
       } if (model.getRowCount () == 0){JOptionPane.showMessageDialog(null,"il y a aucun etudiant");
       
       } else{ int i=0;
       deplacer(i);
       }
       txtre.setText("");
       }catch (Exception e) { System.err.println(e);
       JOptionPane.showMessageDialog(null,e.getMessage());
       }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtprActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtprActionPerformed
/**
 * 
 * @param evt événement onClick s'appliquant sur chaque ligne du tableau
 * permattant de déplacer la ligne vers le formulaire.
 */
    private void tbMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbMouseClicked
        // TODO add your handling code here:
        
        try {  int i=tb.getSelectedRow();
            deplacer(i);
            //sa si quant on choisir un nom dans le tableau il va afficher sur les fieldtext
        }
        catch (Exception e){JOptionPane.showMessageDialog(null,"erreur selectionne\n"+e.getMessage());          }
    }//GEN-LAST:event_tbMouseClicked

    /**
     * 
     * @param evt représentant l'événement onClick pour actionner le bouton d'ajout 
     * de l'information
     * ici nous allons inserer les données dans la table étudiant de notre bd 
     * nous gardons le meme code d'insertion que précédemment 
     * ceci permet d'acceder à la fonctionnnalité Ajouter à travers la barre de menu
     * racourcis clavier: Ctrl+B pour valider l'insertion d'in étudiant.
     */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
          
     AfficherFormulaire();
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed
/**
 * 
 * @param evt 
 * nous allons modifier les informations de chaque étudiant
 * la modification se fait ici à partir de la barre de menu
 *  en utilisant des racourcis claviers en cas de besion Ctrl+M pour valider la modification d'un étudiant.
 */
    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        
         try { 
            if (JOptionPane.showConfirmDialog (null,"confirmer la modification","modification",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {

                st.executeUpdate("UPDATE etudiant SET nom='"+txtnom.getText()+"',prenom='"+txtpr.getText()+
                        "',filiere='"+jCombfil.getSelectedItem().toString()+"',niveau='"+jCombniv.getSelectedItem().toString()+
                        "' WHERE id= "+txtid.getText());
                //afficher ();
                //actualisation 
           Actualisation();
            } 
        } catch (Exception e){JOptionPane.showMessageDialog(null,"erreur de modifier !!!!!!!");
        System.err.println(e);}
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    /** 
     *   * @param evt
     * suppression d'une information
          * acces à la fonctionnalité Supprimer à travers la barre de menu
          * racourci clavier: touche delete por valider la suppression d'un étudiant.
         */
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        
         
        try {
             if(JOptionPane.showConfirmDialog(null,"supprimer l'etudiant?"
                     ,"attention vous allez supprimer un etudiant",JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION);
         
            if(txtid.getText().length() != 0){
        st.executeUpdate("Delete From etudiant where id = "+txtid.getText());
             }
            else { JOptionPane.showMessageDialog(null,"veuillez remplire le champ id !");}
            //actualisation
          Actualisation();
        
        }catch (Exception e){JOptionPane.showMessageDialog(null,"erreur de suppression \n"+e.getMessage());}
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * 
     * @param evt 
     * recherche d'un étudiant, 
     * ici nous pouvons retrouver un étudiant à partir de la barre de menu
     * racourci clavier: Ctrl+R pour valider la recherche d'un étudiant.
     */
    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        
        
            try {
           model.setRowCount(0);// pour vider la list des etudiants
      {
       rs = st.executeQuery("Select * From etudiant WHERE nom like '%"+txtre.getText()+"%' or prenom like '%"+txtre.getText()+"%' or filiere like '%"+txtre.getText()+"%'"
               + "or niveau like '%"+txtre.getText()+"%' order by id asc");
       }while (rs.next()){
       
       Object [] student ={rs.getInt(1),rs.getString(2),rs.getString(3),rs.getString(5),rs.getString(4)};
     model.addRow(student);
       } if (model.getRowCount () == 0){JOptionPane.showMessageDialog(null,"il y a aucun etudiant");
       
       } else{ int i=0;
       deplacer(i);
       }
       txtre.setText("");
       }catch (Exception e) { System.err.println(e);
       JOptionPane.showMessageDialog(null,e.getMessage());
       }
    }//GEN-LAST:event_jMenuItem8ActionPerformed
/**
 * 
 * @param evt pour l'événément key pressed
 * le champ de texte pour la recherche actionne le comportement normal
 * de la fonctionalité recherche en utilisant le racourci clavier "touche entrer"
 */
    private void txtreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtreKeyPressed
        // TODO add your handling code here:
       
        
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
         
             try {
           model.setRowCount(0);// pour vider la list des etudiants
      {
       rs = st.executeQuery("Select * From etudiant WHERE nom like '%"+txtre.getText()+"%' or prenom like '%"+txtre.getText()+"%' or filiere like '%"+txtre.getText()+"%'"
               + "or niveau like '%"+txtre.getText()+"%' order by id asc");
       }while (rs.next()){
       
       Object [] student ={rs.getInt(1),rs.getString(2),rs.getString(3),rs.getString(5),rs.getString(4)};
     model.addRow(student);
       } if (model.getRowCount () == 0){JOptionPane.showMessageDialog(null,"il y a aucun etudiant");
       
       } else{ int i=0;
       deplacer(i);
       }
       txtre.setText("");
       }catch (Exception e) { System.err.println(e);
       JOptionPane.showMessageDialog(null,e.getMessage());
       }
         }
    }//GEN-LAST:event_txtreKeyPressed

    private void txtreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtreActionPerformed

    /**
     * 
     * @param evt 
     * ouvrir javadoc dans le navigateur par défaut
     * de windows et de toute autre plateforme
     * telle que linux, MAC, ...
     */
    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        // TODO add your handling code here:
        
        String url = "G://POO//netbeans//InfoEtudiants//dist//javadoc/index.html";

        if(Desktop.isDesktopSupported()){
            Desktop desktop = Desktop.getDesktop();
            try {
                desktop.browse(new URI(url));
            } catch (IOException | URISyntaxException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }else{
            Runtime runtime = Runtime.getRuntime();
            try {
                runtime.exec("xdg-open " + url);
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jMenuItem13ActionPerformed
/**
 * ici nous allons exporter les informations 
 * dans un fichier pdf
 * @param evt 
 */
    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed

        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void btnactuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactuActionPerformed
        // TODO add your handling code here:
        Actualisation();
    }//GEN-LAST:event_btnactuActionPerformed

    /**
     * @param args the command line arguments
     * exécution du programme
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GererEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GererEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GererEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GererEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GererEtudiant().setVisible(true);
            }
        });
    } 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnactu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jCombfil;
    private javax.swing.JComboBox<String> jCombniv;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labfil;
    private javax.swing.JLabel labid;
    private javax.swing.JLabel labniv;
    private javax.swing.JLabel labnom;
    private javax.swing.JLabel labpr;
    private javax.swing.JTable tb;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtnom;
    private javax.swing.JTextField txtpr;
    private javax.swing.JTextField txtre;
    // End of variables declaration//GEN-END:variables
}
